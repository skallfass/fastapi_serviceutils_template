[tool.poetry]
name = "{{cookiecutter.service_name}}"
version = "0.1.0"
description = ""
authors = [
  "{{cookiecutter.author}} <{{cookiecutter.author_email}}>"
]
readme = "README.md"
include = ["README.md", "app/config.yml"]

[tool.poetry.dependencies]
python = ">=3.7,<4"
fastapi-serviceutils = ">=2.0"

[tool.poetry.dev-dependencies]
autoflake = ">=1.3"
black = ">=19.10b0"
coverage-badge = ">=1"
flake8 = ">=3.7"
flake8-bugbear = ">=19.8"
ipython = ">=7.8"
jedi = ">=0.14"
mkdocs = ">=1.0.4"
mkdocs-material = ">=4.5"
neovim = ">=0.3.1"
pudb = ">=2019.1"
pydoc-markdown = ">=2.0.5"
pytest = ">=5"
pytest-asyncio = ">=0.10"
pytest-cov = ">=2"
pytest-xdist = ">=1.30"

[tool.poetry.extras]

[tool.dephell.devs]
from = {format = "poetry", path = "pyproject.toml"}
envs = ["main", "devs"]

[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "setuppy", path = "setup.py"}
envs = ["main"]
versioning = "semver"

[tool.dephell.lock]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "poetrylock", path = "poetry.lock"}

[tool.poetry.scripts]
{{cookiecutter.service_name}} = "app.main:main"

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
