[tool.poetry]
name = "{{cookiecutter.service_name}}"
version = "0.1.0"
description = ""
authors = [
  "{{cookiecutter.author}} <{{cookiecutter.author_email}}>"
]
readme = "README.md"
include = ["README.md", "app/config.yml"]

[tool.poetry.dependencies]
python = ">=3.7,<4"
fastapi-serviceutils = ">=2.0"

[tool.poetry.dev-dependencies]
autoflake = ">=1.3"
coverage-badge = ">=1"
flake8 = ">=3.7"
ipython = ">=7.8"
isort = ">=4.3"
jedi = ">=0.14"
neovim = ">=0.3.1"
pre-commit = ">=1.18.3"
pudb = ">=2019.1"
pygments = ">=2.4"
pytest = ">=5"
pytest-asyncio = ">=0.10"
pytest-cov = ">=2"
pytest-xdist = ">=1.30"
sphinx = ">=2"
sphinx-autodoc-typehints = ">=1.6"
sphinx-rtd-theme = ">=0.4.3"
yapf = ">=0.27"

[tool.poetry.extras]
devs = [
    "autoflake",
    "coverage",
    "coverage-badge",
    "flake8",
    "ipython",
    "isort",
    "jedi",
    "neovim",
    "pre-commit",
    "pudb",
    "pygments",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-xdist",
    "sphinx",
    "sphinx-autodoc-typehints",
    "sphinx-rtd-theme",
    "yapf",
]

[tool.dephell.devs]
from = {format = "poetry", path = "pyproject.toml"}
envs = ["main", "devs"]

[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "setuppy", path = "setup.py"}
envs = ["main"]
versioning = "semver"

[tool.dephell.lock]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "poetrylock", path = "poetry.lock"}

[tool.poetry.scripts]
{{cookiecutter.service_name}} = "app.main:main"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
